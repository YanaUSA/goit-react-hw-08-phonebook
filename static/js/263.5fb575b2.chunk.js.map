{"version":3,"file":"static/js/263.5fb575b2.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","pages/contactsPage/contactsPage.styled.js","hooks/useContacts.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/contactsPage/contactsPage.jsx"],"sourcesContent":["export const selectedContacts = state => state.contacts.contacts.items;\nexport const selectedIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectedError = state => state.contacts.contacts.error;\n\nexport const selectedFilter = state => state.contacts.filter;\n","import styled from 'styled-components';\nimport { Container } from 'components/AppCommon.styled';\n\nexport const ContactsPageContainer = styled(Container)`\n    display: flex;\n    height: 100%;\n`;\n\nexport const ContactsFormContainer = styled.div`\n    padding-top: ${props => props.theme.spacing(2)};\n    padding-right: ${props => props.theme.spacing(3)};\n`;\n\nexport const ContactsListContainer = styled.div`\n    padding-top: ${props => props.theme.spacing(2)};\n    padding-left: ${props => props.theme.spacing(3)};\n`;\n\nexport const ContactsPageTitle = styled.h1`\n    display: block;\n    font-size: 30px;\n    font-weight: 600;\n    margin: 20px;\n    color: inherit;\n`;\n\nexport const ContactsSectionTitle = styled.h2`\n    display: block;\n    margin: 20px;\n    font-size: 30px;\n    font-weight: 600;\n    color: inherit;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n    selectedContacts,\n    selectedIsLoading,\n    selectedError,\n    selectedFilter,\n} from '../redux/contacts/contacts-selectors';\n\nexport const useContacts = () => {\n    return {\n        contacts: useSelector(selectedContacts),\n        isLoading: useSelector(selectedIsLoading),\n        error: useSelector(selectedError),\n        filteredContact: useSelector(selectedFilter),\n    };\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n    width: fit-content;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: 1px solid ${props => props.theme.colors.grey};\n\n    padding: ${props => props.theme.spacing(2)};\n    margin-top: ${props => props.theme.spacing(5)};\n    border-radius: ${props => props.theme.spacing(3)};\n    box-shadow: 0px 0px 3px 1px rgba(211, 211, 211, 0.5);\n`;\n\nexport const FormLabel = styled.label`\n    font-size: ${props => props.theme.fontSizes.m};\n    font-weight: ${props => props.theme.fontWeights.m};\n    margin-bottom: ${props => props.theme.spacing(4)};\n    text-transform: capitalize;\n`;\n\nexport const FormInput = styled.input`\n    display: block;\n    width: 200px;\n    margin-top: ${props => props.theme.spacing(1)};\n    outline: none;\n    border: none;\n    border-radius: ${props => props.theme.spacing(1)};\n    padding: 5px 10px;\n    box-shadow: 0 0 2px 0.2px #d3d3d3;\n    font-weight: ${props => props.theme.fontWeights.norm};\n    font-size: ${props => props.theme.fontSizes.sm};\n`;\n\nexport const FormButton = styled.button`\n    width: fix-content;\n    padding: ${props => props.theme.spacing(2)};\n    text-align: center;\n    color: ${props => props.theme.colors.black};\n    text-transform: uppercase;\n    font-weight: ${props => props.theme.fontWeights.l};\n    font-size: ${props => props.theme.fontSizes.sm};\n    cursor: pointer;\n    display: inline-block;\n\n    background-color: transparent;\n    border: ${props => props.theme.spacing(0.7)} solid\n        ${props => props.theme.colors.neonBlue};\n    border-radius: 50px;\n    transition: ${props => props.theme.transition.btnHoverTime} ease-in-out;\n    color: ${props => props.theme.colors.neonBlue};\n    margin-bottom: ${props => props.theme.spacing(2)};\n\n    :hover {\n        box-shadow: 0 0 5px 0 ${props => props.theme.colors.neonBlue} inset,\n            0 0 10px 2px ${props => props.theme.colors.neonBlue};\n        border: ${props => props.theme.spacing(0.7)} solid\n            ${props => props.theme.colors.neonBlue};\n    }\n`;\n","import { useState } from 'react';\nimport { useContacts } from 'hooks/useContacts';\nimport { Form, FormLabel, FormInput, FormButton } from './ContactForm.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { addContactThunk } from 'redux/contacts/contacts-thunk';\n\nexport const ContactForm = () => {\n    /////////////// REDUX //////////////\n    const { contacts } = useContacts();\n    const dispatch = useDispatch();\n\n    const addContact = obj => {\n        contacts.find(\n            ({ name }) => name.toLowerCase() === obj.name.toLowerCase()\n        )\n            ? alert(`${obj.name} is already in contacts`)\n            : dispatch(addContactThunk(obj));\n    };\n\n    /////////////// LOCAL STATE //////////////\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleChange = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n\n            case 'number':\n                setNumber(value);\n                break;\n\n            default:\n                return;\n        }\n    };\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        addContact({ name, number });\n\n        if (\n            contacts.find(\n                contact => contact.name.toLowerCase() === name.toLowerCase()\n            )\n        ) {\n            return;\n        }\n\n        resetForm();\n    };\n\n    const resetForm = () => {\n        setName('');\n        setNumber('');\n    };\n\n    return (\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\n            <FormLabel>\n                Name\n                <FormInput\n                    name=\"name\"\n                    value={name}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    onChange={handleChange}\n                    placeholder=\"Enter name\"\n                />\n            </FormLabel>\n            <FormLabel>\n                Number\n                <FormInput\n                    type=\"tel\"\n                    name=\"number\"\n                    value={number}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    onChange={handleChange}\n                    placeholder=\"000-00-00\"\n                />\n            </FormLabel>\n            <FormButton type=\"submit\">Add contact</FormButton>\n        </Form>\n    );\n};\n","import styled from 'styled-components';\n\nexport const UserList = styled.ul`\n    margin: 0;\n    padding: 0;\n    width: fit-content;\n`;\n","import styled from 'styled-components';\nimport { ImBin } from 'react-icons/im';\n\nexport const ItemWrapper = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-bottom: 10px;\n    max-width: inherit;\n`;\n\nexport const NameWrapper = styled.div`\n    word-break: break-all;\n    white-space: pre-wrap;\n`;\n\nexport const UserContact = styled.p`\n    margin: 0;\n    padding: 0;\n    font-size: ${props => props.theme.fontSizes.m};\n    font-weight: ${props => props.theme.fontWeights.norm};\n`;\n\nexport const UserDeleteBtn = styled.button`\n    display: inline-block;\n    width: fix-content;\n    text-align: center;\n    text-transform: capitalize;\n    padding: ${props => props.theme.spacing(2)};\n    color: ${props => props.theme.colors.grey};\n    font-weight: ${props => props.theme.fontWeights.l};\n    font-size: ${props => props.theme.fontSizes.sm};\n    background: ${props => props.theme.colors.greyBtnBgrColor};\n    border: ${props => props.theme.spacing(0.7)} solid transparent;\n    border-radius: 50px;\n    transition: ${props => props.theme.transition.btnHoverTime} ease-in-out;\n    cursor: pointer;\n    margin-left: ${props => props.theme.spacing(3)};\n\n    :hover {\n        box-shadow: 0 0 5px 0 ${props => props.theme.colors.neonCrimson} inset,\n            0 0 10px 2px ${props => props.theme.colors.neonCrimson};\n        border: ${props => props.theme.spacing(0.7)} solid\n            ${props => props.theme.colors.neonCrimson};\n    }\n`;\n\nexport const DeleteIcon = styled(ImBin)`\n    width: ${props => props.theme.spacing(5)};\n    height: ${props => props.theme.spacing(5)};\n\n    fill: ${props => props.theme.colors.grey};\n    margin-left: ${props => props.theme.spacing(3)};\n\n    :hover {\n        fill: ${props => props.theme.colors.neonCrimson};\n    }\n`;\n","import PropTypes from 'prop-types';\nimport {\n    ItemWrapper,\n    UserContact,\n    // UserDeleteBtn,\n    DeleteIcon,\n    NameWrapper,\n} from './ContactListItem.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contacts/contacts-thunk';\n\nexport const ContactListItem = ({ userId, userName, tel }) => {\n    const dispatch = useDispatch();\n\n    return (\n        <ItemWrapper>\n            <NameWrapper>\n                <UserContact>\n                    {userName + ':  '}\n                    {tel}\n                </UserContact>\n            </NameWrapper>\n\n            <div onClick={() => dispatch(deleteContactThunk(userId))}>\n                <DeleteIcon />\n            </div>\n\n            {/* <UserDeleteBtn onClick={() => dispatch(deleteContactThunk(userId))}>\n                Delete\n            </UserDeleteBtn> */}\n        </ItemWrapper>\n    );\n};\n\nContactListItem.propTypes = {\n    userId: PropTypes.string.isRequired,\n    userName: PropTypes.string.isRequired,\n    tel: PropTypes.string.isRequired,\n};\n","import { UserList } from './ContactList.styled';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { useContacts } from 'hooks/useContacts';\n\nexport const ContactList = () => {\n    const { contacts, filteredContact } = useContacts();\n\n    const namesFiltered = contacts.filter(({ name }) =>\n        name.toLowerCase().includes(filteredContact)\n    );\n\n    return (\n        <UserList>\n            {namesFiltered.map(({ id, name, number }) => (\n                <ContactListItem\n                    key={id}\n                    userId={id}\n                    userName={name}\n                    tel={number}\n                />\n            ))}\n        </UserList>\n    );\n};\n","import styled from 'styled-components';\n\nexport const FilterBox = styled.div`\n    margin-top: ${props => props.theme.spacing(5)};\n    margin-bottom: ${props => props.theme.spacing(7)};\n\n    border: 1px solid ${props => props.theme.colors.grey};\n    padding: ${props => props.theme.spacing(3)};\n    border-radius: ${props => props.theme.spacing(3)};\n    box-shadow: 0px 0px 3px 1px rgba(211, 211, 211, 0.5);\n`;\n\nexport const FilterLabel = styled.label`\n    font-size: ${props => props.theme.fontSizes.m};\n    font-weight: ${props => props.theme.fontWeights.m};\n`;\n\nexport const FilterInput = styled.input`\n    display: block;\n    width: 100%;\n    margin-top: ${props => props.theme.spacing(1)};\n    outline: none;\n    border: none;\n    border-radius: ${props => props.theme.spacing(1)};\n    padding: 5px 10px;\n    box-shadow: 0 0 2px 0.2px #d3d3d3;\n    font-weight: ${props => props.theme.fontWeights.norm};\n    font-size: ${props => props.theme.fontSizes.sm};\n`;\n","import { useState } from 'react';\nimport { FilterBox, FilterLabel, FilterInput } from './Filter.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { filteredContact } from 'redux/contacts/contacts-slice';\n\nexport const Filter = () => {\n    const [filter, setFilter] = useState('');\n    const dispatch = useDispatch();\n\n    const handleFilterContact = e => {\n        setFilter(e.target.value);\n\n        const normalizedFilterValue = e.target.value.toLowerCase().trim();\n\n        dispatch(filteredContact(normalizedFilterValue));\n    };\n\n    return (\n        <FilterBox>\n            <FilterLabel>\n                Find contact by name\n                <FilterInput\n                    autocomplete=\"off\"\n                    type=\"text\"\n                    name=\"name\"\n                    value={filter}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    // required\n                    onChange={handleFilterContact}\n                    placeholder=\"Enter name\"\n                />\n            </FilterLabel>\n        </FilterBox>\n    );\n};\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nconst Loader = () => {\n    return (\n        <LoaderContainer>\n            <ThreeDots\n                height=\"80\"\n                width=\"80\"\n                radius=\"9\"\n                color=\"#2becd2\"\n                ariaLabel=\"three-dots-loading\"\n                visible={true}\n            />\n        </LoaderContainer>\n    );\n};\n\nexport default Loader;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n    selectedIsLoading,\n    selectedError,\n} from 'redux/contacts/contacts-selectors';\nimport { getContactsThunk } from 'redux/contacts/contacts-thunk';\nimport {\n    ContactsPageContainer,\n    // ContactsPageTitle,\n    // ContactsSectionTitle,\n    ContactsFormContainer,\n    ContactsListContainer,\n} from './contactsPage.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\n\nconst ContactsPage = () => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectedIsLoading);\n    const error = useSelector(selectedError);\n\n    useEffect(() => {\n        dispatch(getContactsThunk());\n    }, [dispatch]);\n\n    return (\n        <ContactsPageContainer>\n            <ContactsFormContainer>\n                {/* <ContactsPageTitle>Phonebook</ContactsPageTitle> */}\n                <ContactForm />\n            </ContactsFormContainer>\n            <ContactsListContainer>\n                {/* <ContactsSectionTitle>My list</ContactsSectionTitle> */}\n                <Filter />\n                {isLoading && !error && <Loader />}\n                <ContactList />\n            </ContactsListContainer>\n        </ContactsPageContainer>\n    );\n};\n\nexport default ContactsPage;\n"],"names":["selectedContacts","state","contacts","items","selectedIsLoading","isLoading","selectedError","error","selectedFilter","filter","ContactsPageContainer","styled","Container","ContactsFormContainer","props","theme","spacing","ContactsListContainer","useContacts","useSelector","filteredContact","Form","colors","grey","FormLabel","fontSizes","m","fontWeights","FormInput","norm","sm","FormButton","black","l","neonBlue","transition","btnHoverTime","ContactForm","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","target","value","resetForm","onSubmit","evt","obj","preventDefault","find","toLowerCase","alert","addContactThunk","contact","autoComplete","pattern","title","required","onChange","placeholder","type","UserList","ItemWrapper","NameWrapper","UserContact","DeleteIcon","greyBtnBgrColor","neonCrimson","ImBin","ContactListItem","userId","userName","tel","onClick","deleteContactThunk","ContactList","namesFiltered","includes","map","id","FilterBox","FilterLabel","FilterInput","Filter","setFilter","autocomplete","e","normalizedFilterValue","trim","LoaderContainer","height","width","radius","color","ariaLabel","visible","useEffect","getContactsThunk"],"sourceRoot":""}